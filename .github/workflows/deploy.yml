name: CI/CD (EC2 Docker Compose)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  ci:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install deps
        run: npm ci

      - name: Build
        run: npm run build --if-present

      - name: Test
        run: npm test --if-present

  deploy:
    name: Deploy to EC2
    needs: ci
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    env:
      REPO_URL: https://github.com/${{ github.repository }}.git
      APP_DIR: ${{ secrets.APP_DIR }}
    steps:
      - name: Connect and deploy over SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT || 22 }}
          script_stop: true
          script: |
            set -euo pipefail
            if [ ! -d "$APP_DIR/.git" ]; then
              mkdir -p "$APP_DIR"
              git clone "$REPO_URL" "$APP_DIR"
            fi
            cd "$APP_DIR"
            git fetch --all --prune
            git reset --hard origin/main

            # Optional: set env vars here, or use .env file
            # export JWT_SECRET=${JWT_SECRET}

            docker compose down || true
            docker compose pull || true
            docker compose build --no-cache
            docker compose up -d
            docker compose ps

            echo "Deployed commit: $(git rev-parse --short HEAD)"
